// Code generated by rpc_gen. DO NOT EDIT.

package cmltestdb

import (
	"reflect"

	"git.pinquest.cn/qlb/brick/dbproxy"
)

var ModelRoleResource = &dbproxy.ModelObjectType{
	Name: "cmltest.ModelRoleResource",
	PrimaryKey: "id",
	PrimaryKeyType: "uint64",
	FieldList: &dbproxy.ObjectFieldList{
		List: []*dbproxy.ObjectField{
			{
				FieldName: "id",
				Type:      "uint64",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  false,
				IsArray:   false,
			},
			{
				FieldName: "created_at",
				Type:      "uint32",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  false,
				IsArray:   false,
			},
			{
				FieldName: "updated_at",
				Type:      "uint32",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  false,
				IsArray:   false,
			},
			{
				FieldName: "deleted_at",
				Type:      "uint32",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  false,
				IsArray:   false,
			},
			{
				FieldName: "corp_id",
				Type:      "uint32",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  true,
				IsArray:   false,
			},
			{
				FieldName: "app_id",
				Type:      "uint32",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  true,
				IsArray:   false,
			},
			{
				FieldName: "role_id",
				Type:      "uint64",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  true,
				IsArray:   false,
			},
			{
				FieldName: "resource_type",
				Type:      "uint32",
				RefType:   "cmltest.ResourceType",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  true,
				IsArray:   false,
			},
			{
				FieldName: "resource_id",
				Type:      "uint64",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  true,
				IsArray:   false,
			},
		},
	},
}

func init() {
	ObjectTypeList = append(ObjectTypeList, ModelRoleResource)
}

var IdModelRoleResource = &dbproxy.StructField{
	StructFieldName: "Id",
	DbFieldName:     "id",
}

var CreatedAtModelRoleResource = &dbproxy.StructField{
	StructFieldName: "CreatedAt",
	DbFieldName:     "created_at",
}

var UpdatedAtModelRoleResource = &dbproxy.StructField{
	StructFieldName: "UpdatedAt",
	DbFieldName:     "updated_at",
}

var DeletedAtModelRoleResource = &dbproxy.StructField{
	StructFieldName: "DeletedAt",
	DbFieldName:     "deleted_at",
}

var CorpIdModelRoleResource = &dbproxy.StructField{
	StructFieldName: "CorpId",
	DbFieldName:     "corp_id",
}

var AppIdModelRoleResource = &dbproxy.StructField{
	StructFieldName: "AppId",
	DbFieldName:     "app_id",
}

var RoleIdModelRoleResource = &dbproxy.StructField{
	StructFieldName: "RoleId",
	DbFieldName:     "role_id",
}

var ResourceTypeModelRoleResource = &dbproxy.StructField{
	StructFieldName: "ResourceType",
	DbFieldName:     "resource_type",
}

var ResourceIdModelRoleResource = &dbproxy.StructField{
	StructFieldName: "ResourceId",
	DbFieldName:     "resource_id",
}

type ModelRoleResourceReflect struct {
	Id dbproxy.StructFieldWithObj
	CreatedAt dbproxy.StructFieldWithObj
	UpdatedAt dbproxy.StructFieldWithObj
	DeletedAt dbproxy.StructFieldWithObj
	CorpId dbproxy.StructFieldWithObj
	AppId dbproxy.StructFieldWithObj
	RoleId dbproxy.StructFieldWithObj
	ResourceType dbproxy.StructFieldWithObj
	ResourceId dbproxy.StructFieldWithObj
}

func NewModelRoleResourceReflect(i interface{}) *ModelRoleResourceReflect {
	obj := reflect.ValueOf(i)
	if obj.Kind() == reflect.Ptr {
	    obj = obj.Elem()
	}
	r := &ModelRoleResourceReflect{
		Id: dbproxy.StructFieldWithObj{Field: IdModelRoleResource, Obj: obj},
		CreatedAt: dbproxy.StructFieldWithObj{Field: CreatedAtModelRoleResource, Obj: obj},
		UpdatedAt: dbproxy.StructFieldWithObj{Field: UpdatedAtModelRoleResource, Obj: obj},
		DeletedAt: dbproxy.StructFieldWithObj{Field: DeletedAtModelRoleResource, Obj: obj},
		CorpId: dbproxy.StructFieldWithObj{Field: CorpIdModelRoleResource, Obj: obj},
		AppId: dbproxy.StructFieldWithObj{Field: AppIdModelRoleResource, Obj: obj},
		RoleId: dbproxy.StructFieldWithObj{Field: RoleIdModelRoleResource, Obj: obj},
		ResourceType: dbproxy.StructFieldWithObj{Field: ResourceTypeModelRoleResource, Obj: obj},
		ResourceId: dbproxy.StructFieldWithObj{Field: ResourceIdModelRoleResource, Obj: obj},
	}

	return r
}

