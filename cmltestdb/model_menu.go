// Code generated by rpc_gen. DO NOT EDIT.

package cmltestdb

import (
	"reflect"

	"git.pinquest.cn/qlb/brick/dbproxy"
)

var ModelMenu = &dbproxy.ModelObjectType{
	Name: "cmltest.ModelMenu",
	PrimaryKey: "id",
	PrimaryKeyType: "uint64",
	FieldList: &dbproxy.ObjectFieldList{
		List: []*dbproxy.ObjectField{
			{
				FieldName: "id",
				Type:      "uint64",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  false,
				IsArray:   false,
			},
			{
				FieldName: "created_at",
				Type:      "uint32",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  false,
				IsArray:   false,
			},
			{
				FieldName: "updated_at",
				Type:      "uint32",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  false,
				IsArray:   false,
			},
			{
				FieldName: "deleted_at",
				Type:      "uint32",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  false,
				IsArray:   false,
			},
			{
				FieldName: "name",
				Type:      "string",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "min=1,max=30",
				DbDef:     "type:varchar(30)",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  true,
				IsArray:   false,
			},
			{
				FieldName: "parent_id",
				Type:      "uint64",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "cmltest.ModelMenu",
				Editable:  true,
				IsArray:   false,
			},
			{
				FieldName: "view_order",
				Type:      "uint32",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  true,
				IsArray:   false,
			},
			{
				FieldName: "app_type",
				Type:      "uint32",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  true,
				IsArray:   false,
			},
			{
				FieldName: "permission_id_list",
				Type:      "uint64",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "max=512",
				DbDef:     "type:text",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  true,
				IsArray:   true,
			},
		},
	},
}

func init() {
	ObjectTypeList = append(ObjectTypeList, ModelMenu)
}

var IdModelMenu = &dbproxy.StructField{
	StructFieldName: "Id",
	DbFieldName:     "id",
}

var CreatedAtModelMenu = &dbproxy.StructField{
	StructFieldName: "CreatedAt",
	DbFieldName:     "created_at",
}

var UpdatedAtModelMenu = &dbproxy.StructField{
	StructFieldName: "UpdatedAt",
	DbFieldName:     "updated_at",
}

var DeletedAtModelMenu = &dbproxy.StructField{
	StructFieldName: "DeletedAt",
	DbFieldName:     "deleted_at",
}

var NameModelMenu = &dbproxy.StructField{
	StructFieldName: "Name",
	DbFieldName:     "name",
}

var ParentIdModelMenu = &dbproxy.StructField{
	StructFieldName: "ParentId",
	DbFieldName:     "parent_id",
}

var ViewOrderModelMenu = &dbproxy.StructField{
	StructFieldName: "ViewOrder",
	DbFieldName:     "view_order",
}

var AppTypeModelMenu = &dbproxy.StructField{
	StructFieldName: "AppType",
	DbFieldName:     "app_type",
}

var PermissionIdListModelMenu = &dbproxy.StructField{
	StructFieldName: "PermissionIdList",
	DbFieldName:     "permission_id_list",
}

type ModelMenuReflect struct {
	Id dbproxy.StructFieldWithObj
	CreatedAt dbproxy.StructFieldWithObj
	UpdatedAt dbproxy.StructFieldWithObj
	DeletedAt dbproxy.StructFieldWithObj
	Name dbproxy.StructFieldWithObj
	ParentId dbproxy.StructFieldWithObj
	ViewOrder dbproxy.StructFieldWithObj
	AppType dbproxy.StructFieldWithObj
	PermissionIdList dbproxy.StructFieldWithObj
}

func NewModelMenuReflect(i interface{}) *ModelMenuReflect {
	obj := reflect.ValueOf(i)
	if obj.Kind() == reflect.Ptr {
	    obj = obj.Elem()
	}
	r := &ModelMenuReflect{
		Id: dbproxy.StructFieldWithObj{Field: IdModelMenu, Obj: obj},
		CreatedAt: dbproxy.StructFieldWithObj{Field: CreatedAtModelMenu, Obj: obj},
		UpdatedAt: dbproxy.StructFieldWithObj{Field: UpdatedAtModelMenu, Obj: obj},
		DeletedAt: dbproxy.StructFieldWithObj{Field: DeletedAtModelMenu, Obj: obj},
		Name: dbproxy.StructFieldWithObj{Field: NameModelMenu, Obj: obj},
		ParentId: dbproxy.StructFieldWithObj{Field: ParentIdModelMenu, Obj: obj},
		ViewOrder: dbproxy.StructFieldWithObj{Field: ViewOrderModelMenu, Obj: obj},
		AppType: dbproxy.StructFieldWithObj{Field: AppTypeModelMenu, Obj: obj},
		PermissionIdList: dbproxy.StructFieldWithObj{Field: PermissionIdListModelMenu, Obj: obj},
	}

	return r
}

