// Code generated by rpc_gen. DO NOT EDIT.

package cmltestdb

import (
	"reflect"

	"git.pinquest.cn/qlb/brick/dbproxy"
)

var ModelPermission = &dbproxy.ModelObjectType{
	Name: "cmltest.ModelPermission",
	PrimaryKey: "id",
	PrimaryKeyType: "uint64",
	FieldList: &dbproxy.ObjectFieldList{
		List: []*dbproxy.ObjectField{
			{
				FieldName: "id",
				Type:      "uint64",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  false,
				IsArray:   false,
			},
			{
				FieldName: "created_at",
				Type:      "uint32",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  false,
				IsArray:   false,
			},
			{
				FieldName: "updated_at",
				Type:      "uint32",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  false,
				IsArray:   false,
			},
			{
				FieldName: "deleted_at",
				Type:      "uint32",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  false,
				IsArray:   false,
			},
			{
				FieldName: "parent_id",
				Type:      "uint64",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  true,
				IsArray:   false,
			},
			{
				FieldName: "name",
				Type:      "string",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "max=30",
				DbDef:     "type: varchar(30)",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  true,
				IsArray:   false,
			},
			{
				FieldName: "const_id",
				Type:      "string",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "max=100",
				DbDef:     "type: varchar(100)",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  true,
				IsArray:   false,
			},
			{
				FieldName: "app_type",
				Type:      "uint32",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  true,
				IsArray:   false,
			},
			{
				FieldName: "order_view",
				Type:      "uint32",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  true,
				IsArray:   false,
			},
			{
				FieldName: "raw",
				Type:      "string",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "max=1000",
				DbDef:     "type: text",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  true,
				IsArray:   false,
			},
		},
	},
}

func init() {
	ObjectTypeList = append(ObjectTypeList, ModelPermission)
}

var IdModelPermission = &dbproxy.StructField{
	StructFieldName: "Id",
	DbFieldName:     "id",
}

var CreatedAtModelPermission = &dbproxy.StructField{
	StructFieldName: "CreatedAt",
	DbFieldName:     "created_at",
}

var UpdatedAtModelPermission = &dbproxy.StructField{
	StructFieldName: "UpdatedAt",
	DbFieldName:     "updated_at",
}

var DeletedAtModelPermission = &dbproxy.StructField{
	StructFieldName: "DeletedAt",
	DbFieldName:     "deleted_at",
}

var ParentIdModelPermission = &dbproxy.StructField{
	StructFieldName: "ParentId",
	DbFieldName:     "parent_id",
}

var NameModelPermission = &dbproxy.StructField{
	StructFieldName: "Name",
	DbFieldName:     "name",
}

var ConstIdModelPermission = &dbproxy.StructField{
	StructFieldName: "ConstId",
	DbFieldName:     "const_id",
}

var AppTypeModelPermission = &dbproxy.StructField{
	StructFieldName: "AppType",
	DbFieldName:     "app_type",
}

var OrderViewModelPermission = &dbproxy.StructField{
	StructFieldName: "OrderView",
	DbFieldName:     "order_view",
}

var RawModelPermission = &dbproxy.StructField{
	StructFieldName: "Raw",
	DbFieldName:     "raw",
}

type ModelPermissionReflect struct {
	Id dbproxy.StructFieldWithObj
	CreatedAt dbproxy.StructFieldWithObj
	UpdatedAt dbproxy.StructFieldWithObj
	DeletedAt dbproxy.StructFieldWithObj
	ParentId dbproxy.StructFieldWithObj
	Name dbproxy.StructFieldWithObj
	ConstId dbproxy.StructFieldWithObj
	AppType dbproxy.StructFieldWithObj
	OrderView dbproxy.StructFieldWithObj
	Raw dbproxy.StructFieldWithObj
}

func NewModelPermissionReflect(i interface{}) *ModelPermissionReflect {
	obj := reflect.ValueOf(i)
	if obj.Kind() == reflect.Ptr {
	    obj = obj.Elem()
	}
	r := &ModelPermissionReflect{
		Id: dbproxy.StructFieldWithObj{Field: IdModelPermission, Obj: obj},
		CreatedAt: dbproxy.StructFieldWithObj{Field: CreatedAtModelPermission, Obj: obj},
		UpdatedAt: dbproxy.StructFieldWithObj{Field: UpdatedAtModelPermission, Obj: obj},
		DeletedAt: dbproxy.StructFieldWithObj{Field: DeletedAtModelPermission, Obj: obj},
		ParentId: dbproxy.StructFieldWithObj{Field: ParentIdModelPermission, Obj: obj},
		Name: dbproxy.StructFieldWithObj{Field: NameModelPermission, Obj: obj},
		ConstId: dbproxy.StructFieldWithObj{Field: ConstIdModelPermission, Obj: obj},
		AppType: dbproxy.StructFieldWithObj{Field: AppTypeModelPermission, Obj: obj},
		OrderView: dbproxy.StructFieldWithObj{Field: OrderViewModelPermission, Obj: obj},
		Raw: dbproxy.StructFieldWithObj{Field: RawModelPermission, Obj: obj},
	}

	return r
}

