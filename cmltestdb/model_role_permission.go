// Code generated by rpc_gen. DO NOT EDIT.

package cmltestdb

import (
	"reflect"

	"git.pinquest.cn/qlb/brick/dbproxy"
)

var ModelRolePermission = &dbproxy.ModelObjectType{
	Name: "cmltest.ModelRole.Permission",
	PrimaryKey: "",
	PrimaryKeyType: "",
	FieldList: &dbproxy.ObjectFieldList{
		List: []*dbproxy.ObjectField{
			{
				FieldName: "permission_map",
				Type:      "object",
				RefType:   "",
				FormName:  "",
				FormType:  "",
				Validate:  "",
				DbDef:     "",
				ScopeCond: "",
				LinkTo:    "",
				Editable:  true,
				IsArray:   false,
			},
		},
	},
}

func init() {
	ObjectTypeList = append(ObjectTypeList, ModelRolePermission)
}

var PermissionMapModelRolePermission = &dbproxy.StructField{
	StructFieldName: "PermissionMap",
	DbFieldName:     "permission_map",
}

type ModelRolePermissionReflect struct {
	PermissionMap dbproxy.StructFieldWithObj
}

func NewModelRolePermissionReflect(i interface{}) *ModelRolePermissionReflect {
	obj := reflect.ValueOf(i)
	if obj.Kind() == reflect.Ptr {
	    obj = obj.Elem()
	}
	r := &ModelRolePermissionReflect{
		PermissionMap: dbproxy.StructFieldWithObj{Field: PermissionMapModelRolePermission, Obj: obj},
	}

	return r
}

